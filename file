<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/age"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="87dp"
        android:layout_marginTop="41dp"
        android:layout_marginEnd="114dp"
        android:ems="10"
        android:hint="Age"
        android:inputType="textPersonName"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/name" />

    <EditText
        android:id="@+id/name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="89dp"
        android:layout_marginTop="129dp"
        android:layout_marginEnd="112dp"
        android:ems="10"
        android:hint="Name"
        android:inputType="textPersonName"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/contact"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="92dp"
        android:layout_marginTop="34dp"
        android:layout_marginEnd="110dp"
        android:ems="10"
        android:hint="Contact"
        android:inputType="textPersonName"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/age" />

    <LinearLayout
        android:layout_width="410dp"
        android:layout_height="359dp"
        android:layout_marginStart="1dp"
        android:layout_marginTop="32dp"
        android:layout_marginBottom="1dp"
        android:orientation="vertical"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/contact">

        <Button
            android:id="@+id/insert"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="insert" />

        <Button
            android:id="@+id/update"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="update" />

        <Button
            android:id="@+id/delete"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="delete" />

        <Button
            android:id="@+id/view"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="view" />
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>

________________________________________________________________________________________________________________________________________


package com.example.db;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {


    EditText name,age,contact;
    Button insert,update,delete,view;
    DBHelper DB;
    
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        
        name=findViewById(R.id.name);
        age=findViewById(R.id.age);
        contact=findViewById(R.id.contact);
        
        insert=findViewById(R.id.insert);
        update=findViewById(R.id.update);
        delete=findViewById(R.id.delete);
        view=findViewById(R.id.view);
        
        DB=new DBHelper(this);
        
        
        insert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                
                String nametxt=name.getText().toString();
                String agetxt=age.getText().toString();
                String contacttxt=contact.getText().toString();
                
                boolean status=DB.insertdata(nametxt,agetxt,contacttxt);
                
                if(status==true)
                    Toast.makeText(MainActivity.this, "new record inserted", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "insertion failed", Toast.LENGTH_SHORT).show();
            }
        });



        update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String nametxt=name.getText().toString();
                String agetxt=age.getText().toString();
                String contacttxt=contact.getText().toString();

                boolean status=DB.updatedata(nametxt,agetxt,contacttxt);

                if(status==true)
                    Toast.makeText(MainActivity.this, "new record updated", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "updation failed", Toast.LENGTH_SHORT).show();
            }
        });



        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String nametxt=name.getText().toString();
                

                boolean status=DB.deletedata(nametxt);

                if(status==true)
                    Toast.makeText(MainActivity.this, "record deleted", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "deletion failed", Toast.LENGTH_SHORT).show();
            }
        });




        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                Cursor res=DB.viewdata();
                if(res.getCount()==0)
                    Toast.makeText(MainActivity.this, "no such record exists", Toast.LENGTH_SHORT).show();
                else
                {
                    StringBuffer buffer=new StringBuffer();
                    while(res.moveToNext())
                    {
                        buffer.append("Name: "+res.getString(0)+"\n");
                        buffer.append("Age: "+res.getString(1)+"\n");
                        buffer.append("Contact: "+res.getString(2)+"\n");
                    }
                    AlertDialog.Builder builder=new AlertDialog.Builder(MainActivity.this);
                    builder.setCancelable(true);
                    builder.setTitle("user details");
                    builder.setMessage(buffer.toString());
                    builder.show();
                }
                
            }
        });
        
        
    }
}


__________________________________________________________________________________________________________________________________________



package com.example.db;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DBHelper extends SQLiteOpenHelper {

    public DBHelper(@Nullable Context context){
        super(context,"userdata.db",null,1);
    }


    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("create Table Userdetails(name Text primary key,age TEXT,contact TEXT)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("drop Table if exists Userdetails");
    }

    public boolean insertdata(String name,String age,String contact){
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues contentValues=new ContentValues();
        contentValues.put("name",name);
        contentValues.put("age",age);
        contentValues.put("contact",contact);
        long res=db.insert("Userdetails",null,contentValues);
        if(res==-1)
            return false;
        else
            return true;
    }


    public boolean updatedata(String name,String age,String contact) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();

        contentValues.put("age", age);
        contentValues.put("contact", contact);

        Cursor cursor = db.rawQuery("Select * from Userdetails where name=? ", new String[]{name});
        //long res = 0;
        if(cursor.getCount() > 0) {
          long res = db.update("Userdetails", contentValues, "name=?", new String[]{name});


            if (res == -1)
                return false;
            else
                return true;
        }
        else
            return false;
    }




    public boolean deletedata(String name) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("name",name) ;
        Cursor cursor = db.rawQuery("Select * from Userdetails where name=? ", new String[]{name});
        long res = 0;
        if(cursor.getCount() > 0) {
            res = db.delete("Userdetails", "name=?", new String[]{name});


            if (res == -1)
                return false;
            else
                return true;
        }

        else
            return false;


    }



    public Cursor viewdata(){
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor cursor=db.rawQuery("select * from Userdetails",null);
        return cursor;

    }

}
